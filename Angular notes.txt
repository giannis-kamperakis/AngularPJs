Section 5
SPA (Single Page Application) = A Single Pahe Application is an app that doesn't need to reload the page during its use and works within a Web Browser. The files that contain the code for the site are being dowloaded in the Web Browser that's why the page isn't being loaded again.

With the use of Angular CLI it is easy to create and develop an Angular project. In order to download the Angular CLI we have to install first the node package manager (Node.js). In order to install the Angular CLI we have to run the followin command "npm install -g @angular/cli" and then in order to creat a new project we have to run the following command "ng new <Project-name>"



Section 6
Angular is a component based framework. A component is a combination of data html template and logics. The component represent an area of a view that shows inside the browser. We can reuse components (nav-bar etc.) For every area we can create a specific component.

We can use the selectors of every component into the html of every component. So we can call different components inside of the html of another component.

In order to generate an Angular component using the Angular CLI we have to use the following command "ng g c <component-name>". The files component.spec.ts are responsible for unit testing.

NgOnInit = the NgOnInit is going to run when the current component is fully loaded in the browser. OnInit is a template.

Data binding = {{title}}

Share data between components = Parent to child component via @input decorator, child to parent component via @output decorator, child to parent when there is Event using the @output decorator and event emitter
Share data from the child components to parent component -> @ViewChild, @Output or Emitter.



Section 7

String interpolation = in order to show information of a variable, or anything else we must use the string interpolation. An example of it is the following, {{ message }}

Property binding = <img [src]="imgURL" alt="googleImages"> or <img src="{{ imgURL }}" alt="googleImages">

Class binding = <p [class.text-red] = "boolFlag">{{messageFromChild}}</p>

Style binding = <h2 [style.color] = "boolFlag ? 'red' : 'blue'"> Style Binding </h2>, in order to bind and pass some styling to different elements we have to check the DOM style object (https://www.w3schools.com/jsref/dom_obj_style.asp)

Event binding = <button (click)="buttonClick()"> Click me Again! </button>

Event filtering = <input type="text" (keyup)= "onKeyup($event)"> 

Template variable = <input type="text" (keyup)= "showTemplateVariable($event)">

Two way data binding = app.module.ts -> import FormsModule, app.component.html -> [(ngModel)]

Two way vs One way data binding = With one way data binding I can send data from the component to the View but with the two way binding I can send data from the component to the view and vice versa



Section 8

